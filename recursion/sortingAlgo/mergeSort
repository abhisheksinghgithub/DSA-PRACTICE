#include<iostream>
using namespace std;
//for merge sorting of array
void mergeArray(int *arr,int s,int e)
{
     int mid=(e+s)/2;
     int len1=mid-s+1;
     int len2=e-mid;
     int* first =new int[len1];
     int* second =new int[len2];
     int k=s;
     for(int i=0;i<len1;i++)
     {
         first[i]=arr[k++];
     }
     k=mid+1;
     for(int i=0;i<len2;i++)
     {
         second[i]=arr[k++];
     }
     //meging both arrays
     k=s;
     int index1=0,index2=0;
     while(index1<len1 && index2<len2)
     {
         if(first[index1]<second[index2])
         {
             arr[k++]=first[index1++];
         }
         else
         {
            arr[k++]=second[index2++];
         }

     }
     while(index1<len1)
     {
         arr[k++]=first[index1++];
     }
     while(index1<len1)
     {
         arr[k++]=second[index2++];
     }
     delete []first;
     delete []second;
}
void mergeSort(int *arr,int s,int e)
{
    if(s>=e)
    return;
    int mid=(e+s)/2;
    //for left array
    mergeSort(arr,s,mid);
    //left part of array
    mergeSort(arr,mid+1,e);
    mergeArray(arr,s,e);
}
int main()
{
    int arr[10]={9,8,7,6,1,2,3,4,5,1};
    int size =10;
    mergeSort(arr,0,size-1);
    for (int i = 0; i < size; i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    
}
